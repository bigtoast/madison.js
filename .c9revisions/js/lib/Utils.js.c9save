{"ts":1370039756983,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"define([\n    \"jquery\"\n],function($){\n    /**\n     * Utility functions and variables.\n     */\n    var EMPTY_FUNCTION = function(){};\n    function applyParameters(context,parameters,args,appName) {\n        $(parameters.required).each(function(){\n            if (typeof(args[this])===\"undefined\" && typeof(context[this])===\"undefined\") {\n                throw new ParameterError(\"\\<\\<Parameter Error\\>\\> You didn't pass the required parameter \\<\\<\"+this+\"\\>\\> into your \\<\\<\"+appName+\"\\>\\>  application.\");\n            } else {\n                context[this] = args[this];\n            }\n        });\n        $(parameters.optional).each(function(){\n            context[this[0]] = (typeof(args[this[0]])===\"undefined\")?this[1]:args[this[0]];\n        });\n        args.callbacks = args.callbacks || {};\n        context.callbacks = context.callbacks || {};\n        $(parameters.callbacks).each(function(){\n            context.callbacks[this] = args.callbacks[this] || EMPTY_FUNCTION;\n        });\n    }\n    function runMixin(ctx,mixin,args) {\n        $(mixin).each(function(){(this || EMPTY_FUNCTION).apply(ctx,args);});\n    }\n    function clone(obj) {\n        return $.extend(true,{},obj);\n    }\n    var loadCss = (function(){\n        var loaded_css_files = {};\n        var $head = $(\"head\");\n        return function(appName) {\n            if (loaded_css_files[appName]) return false;\n            var link = $(\"<link />\",{\n                type : \"text/css\"\n                ,rel : \"stylesheet\"\n                ,href : \"css/\"+appName+\".css\"\n            })\n            $head.append(link);\n            loaded_css_files[appName] = true;\n        }\n    }())\n\n    function extend(appName,args) {\n        var method, F,parent_hash={},app,mixin_hash,tmp,prop,superConstructor=this;\n        F = function(args) {\n            if (!args) {return this;}\n            applyParameters(this,this.initialParameters,args,appName);\n            this.ext.constructor.apply(this,[args,superConstructor]);\n            this.callbacks.onCreate(this);\n        };\n        parent_hash.parent = this.appName;\n        F.prototype = new this();\n        if (args.initialParameters) {\n            for (prop in args.initialParameters) {\n                F.prototype.initialParameters[prop] = F.prototype.initialParameters[prop].concat(args.initialParameters[prop]);\n            }\n        }\n\n        tmp = F.prototype.ext.mixins;\n        mixin_hash = clone(tmp);\n        for (app in args.mixins) { if (args.mixins.hasOwnProperty(app)) {\n            for (method in args.mixins[app]) { if (args.mixins[app].hasOwnProperty(method)) {\n                mixin_hash[app][method] = (mixin_hash[app][method] || []).concat([args.mixins[app][method]]);\n            }}\n        }}\n        F.prototype.ext = {\n            mixins : mixin_hash\n            ,constructor : args.constructor || EMPTY_FUNCTION\n        };\n        F.parentName = parent_hash.parent;\n        F.appName = appName;\n        F.extend = extend; //adding this method as a \"static\" method to the new application so it can be extended itself\n        for (method in args.methods) {  if (args.methods.hasOwnProperty(method)) {\n            F.prototype[method] = args.methods[method];\n        }}\n        for (var property in args.properties) {  if (args.properties.hasOwnProperty(property)) {\n            F.prototype[property] = args.properties[property];\n        }}\n        loadCss(F.appName);\n        return F;\n    }\n\n    /*\n        Taken from the Hoodie project:\n        https://github.com/hoodiehq/hoodie.js\n     */\n    function uuid(len) {\n        var chars, i, radix,nums,letters;\n        if (len == null) {\n            len = 7;\n        }\n        nums = '0123456789'.split('');\n        letters = 'abcdefghijklmnopqrstuvwxyz'.split('');\n        chars = nums.concat(letters);\n        radix = chars.length;\n        return ((function() {\n            var _i, _results;\n            _results = [letters[0 | Math.random() * letters.length]];\n            for (i = _i = 0; 0 <= len ? _i < len : _i > len; i = 0 <= len ? ++_i : --_i) {\n                _results.push(chars[0 | Math.random() * radix]);\n            }\n            return _results;\n        })()).join('');\n    };\n    function centroid(coords) {\n        var sum = function(a,b){return a+b};\n        var x_array = coords.map(function(xy){ return xy[0]; });\n        var y_array = coords.map(function(xy){ return xy[1]; });\n        var x_coord = (x_array.reduce(sum)/x_array.length);\n        var y_coord = (y_array.reduce(sum)/y_array.length);\n\n        return [x_coord,y_coord];\n    }\n\n    function camelize(str) {\n        var cc = (str.split(\" \")).map(function(word){\n            return word[0].toUpperCase() + word.slice(1);\n        }).join(\"\")\n        cc = cc[0].toLowerCase() + cc.slice(1);\n        return cc;\n    }\n\n\n    var ParameterError = Error;\n    return {\n         applyParameters : applyParameters\n        ,runMixin : runMixin\n        ,clone : clone\n        ,loadCss : loadCss\n        ,extend : extend\n        ,uuid : uuid\n        ,centroid : centroid\n        ,camelize : camelize\n    }\n})"]],"start1":0,"start2":0,"length1":0,"length2":5052}]],"length":5052}
